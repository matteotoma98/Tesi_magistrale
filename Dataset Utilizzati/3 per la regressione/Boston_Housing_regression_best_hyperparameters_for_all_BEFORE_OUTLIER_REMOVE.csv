Procedura,Algoritmo,Best Params
Grid Search,Random Forest,"{'max_depth': 20, 'n_estimators': 30}"
Grid Search,SVM,"{'C': 100, 'epsilon': 1, 'kernel': 'poly'}"
Grid Search,KNN,{'n_neighbors': 7}
Grid Search,ANN,"{'activation': 'relu', 'batch_size': 32, 'epochs': 50, 'loss': 'mse', 'neurons': 32, 'optimizer': 'rmsprop', 'patience': 5}"
Random Search,Random Forest,"{'criterion': 'friedman_mse', 'max_depth': 22, 'max_features': 5, 'min_samples_leaf': 1, 'min_samples_split': 2, 'n_estimators': 79}"
Random Search,SVM,"{'C': 47.49184653756294, 'epsilon': 0.7088756576173316, 'kernel': 'poly'}"
Random Search,KNN,{'n_neighbors': 9}
Random Search,ANN,"{'activation': 'relu', 'batch_size': 32, 'epochs': 50, 'loss': 'mse', 'neurons': 39, 'optimizer': 'adam', 'patience': 19}"
Hyperband,Random Forest,"{'criterion': 'friedman_mse', 'max_depth': 36, 'max_features': 6, 'min_samples_leaf': 1, 'min_samples_split': 3}"
Hyperband,SVM,"{'C': 0.9495710534507421, 'gamma': 'scale', 'kernel': 'rbf'}"
Hyperband,KNN,{'n_neighbors': 3}
Hyperband,ANN,"{'activation': 'relu', 'alpha': 0.9689627652602737, 'batch_size': 16, 'early_stopping': True, 'hidden_layer_sizes': (34,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.09825992706317388, 'max_iter': 100, 'solver': 'adam', 'validation_fraction': 0.1}"
Bayesian Optimization,Random Forest,"OrderedDict([('criterion', 'squared_error'), ('max_depth', 28), ('max_features', 9), ('min_samples_leaf', 5), ('min_samples_split', 4), ('n_estimators', 44)])"
Bayesian Optimization,SVM,"OrderedDict([('C', 46.32627238426251), ('epsilon', 1.0), ('kernel', 'poly')])"
Bayesian Optimization,KNN,"OrderedDict([('n_neighbors', 8)])"
Bayesian Optimization,ANN,"OrderedDict([('activation', 'relu'), ('batch_size', 32), ('epochs', 20), ('loss', 'mse'), ('neurons', 55), ('optimizer', 'rmsprop'), ('patience', 12)])"
Sequential Model-Based Optimization (skopt),Random Forest,"[100, 50, 13, 2, 1, 'friedman_mse']"
Sequential Model-Based Optimization (skopt),SVM,"[46.92796758780931, 'poly', 1.0]"
Sequential Model-Based Optimization (skopt),KNN,[8]
Sequential Model-Based Optimization (skopt),ANN,"{'optimizer': 'adam', 'activation': 'relu', 'neurons': 75, 'patience': 14, 'loss': 'mse'}"
Bayesian Optimization TPE,Random Forest,"{'criterion': 'friedman_mse', 'max_depth': 27.0, 'max_features': 5.0, 'min_samples_leaf': 1.0, 'min_samples_split': 6.0, 'n_estimators': 79.0}"
Bayesian Optimization TPE,SVM,"{'C': 122.83219662894265, 'epsilon': 0.5747694838097674, 'kernel': 'rbf'}"
Bayesian Optimization TPE,KNN,{'n_neighbors': 9.0}
Bayesian Optimization TPE,ANN,"{'activation': 'relu', 'batch_size': 16.0, 'epochs': 40.0, 'loss': 'mse', 'neurons': 80.0, 'optimizer': 'rmsprop', 'patience': 9.0}"
Particle Swarm Optimization,Random Forest,"{'n_estimators': 84.970703125, 'max_features': 4.17578125, 'max_depth': 27.3681640625, 'min_samples_split': 9.3916015625, 'min_samples_leaf': 1.498046875}"
Particle Swarm Optimization,SVM,"{'C': 42.896080238970086, 'kernel': 0.6050212938579431, 'epsilon': 0.6111204062103747}"
Particle Swarm Optimization,KNN,{'n_neighbors': 7.791015625}
Particle Swarm Optimization,ANN,"{'optimizer': 0.6355908612541703, 'activation': 0.9839940317313016, 'loss': 0.7477880493521316, 'batch_size': 0.694769851582844, 'neurons': 65.9775390625, 'epochs': 46.444345294447885, 'patience': 10.59963972552204}"
Genetic Algorithm,Random Forest,"{'n_estimators': 36, 'max_features': 5, 'max_depth': 15, 'min_samples_split': 4, 'min_samples_leaf': 3, 'criterion': 'squared_error'}"
Genetic Algorithm,SVM,"{'C': 43.42519831968045, 'kernel': 'poly', 'epsilon': 0.062783784180786}"
Genetic Algorithm,KNN,{'n_neighbors': 2}
Genetic Algorithm,ANN,"{'optimizer': 'adam', 'activation': 'relu', 'loss': 'mse', 'batch_size': 16, 'neurons': 82, 'epochs': 50, 'patience': 18}"
TPOT,Random Forest,"{'n_jobs': None, 'transformer_list': [('functiontransformer-1', FunctionTransformer(func=<function copy at 0x7a637d579990>)), ('functiontransformer-2', FunctionTransformer(func=<function copy at 0x7a637d579990>))], 'transformer_weights': None, 'verbose': False, 'verbose_feature_names_out': True, 'functiontransformer-1': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-2': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-1__accept_sparse': False, 'functiontransformer-1__check_inverse': True, 'functiontransformer-1__feature_names_out': None, 'functiontransformer-1__func': <function copy at 0x7a637d579990>, 'functiontransformer-1__inv_kw_args': None, 'functiontransformer-1__inverse_func': None, 'functiontransformer-1__kw_args': None, 'functiontransformer-1__validate': False, 'functiontransformer-2__accept_sparse': False, 'functiontransformer-2__check_inverse': True, 'functiontransformer-2__feature_names_out': None, 'functiontransformer-2__func': <function copy at 0x7a637d579990>, 'functiontransformer-2__inv_kw_args': None, 'functiontransformer-2__inverse_func': None, 'functiontransformer-2__kw_args': None, 'functiontransformer-2__validate': False}"
TPOT,SVM,"{'n_jobs': None, 'transformer_list': [('functiontransformer-1', FunctionTransformer(func=<function copy at 0x7a637d579990>)), ('functiontransformer-2', FunctionTransformer(func=<function copy at 0x7a637d579990>))], 'transformer_weights': None, 'verbose': False, 'verbose_feature_names_out': True, 'functiontransformer-1': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-2': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-1__accept_sparse': False, 'functiontransformer-1__check_inverse': True, 'functiontransformer-1__feature_names_out': None, 'functiontransformer-1__func': <function copy at 0x7a637d579990>, 'functiontransformer-1__inv_kw_args': None, 'functiontransformer-1__inverse_func': None, 'functiontransformer-1__kw_args': None, 'functiontransformer-1__validate': False, 'functiontransformer-2__accept_sparse': False, 'functiontransformer-2__check_inverse': True, 'functiontransformer-2__feature_names_out': None, 'functiontransformer-2__func': <function copy at 0x7a637d579990>, 'functiontransformer-2__inv_kw_args': None, 'functiontransformer-2__inverse_func': None, 'functiontransformer-2__kw_args': None, 'functiontransformer-2__validate': False}"
TPOT,KNN,"{'estimator__algorithm': 'auto', 'estimator__leaf_size': 30, 'estimator__metric': 'minkowski', 'estimator__metric_params': None, 'estimator__n_jobs': None, 'estimator__n_neighbors': 16, 'estimator__p': 2, 'estimator__weights': 'uniform', 'estimator': KNeighborsRegressor(n_neighbors=16)}"
TPOT,ANN,"{'n_jobs': None, 'transformer_list': [('functiontransformer-1', FunctionTransformer(func=<function copy at 0x7a637d579990>)), ('functiontransformer-2', FunctionTransformer(func=<function copy at 0x7a637d579990>))], 'transformer_weights': None, 'verbose': False, 'verbose_feature_names_out': True, 'functiontransformer-1': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-2': FunctionTransformer(func=<function copy at 0x7a637d579990>), 'functiontransformer-1__accept_sparse': False, 'functiontransformer-1__check_inverse': True, 'functiontransformer-1__feature_names_out': None, 'functiontransformer-1__func': <function copy at 0x7a637d579990>, 'functiontransformer-1__inv_kw_args': None, 'functiontransformer-1__inverse_func': None, 'functiontransformer-1__kw_args': None, 'functiontransformer-1__validate': False, 'functiontransformer-2__accept_sparse': False, 'functiontransformer-2__check_inverse': True, 'functiontransformer-2__feature_names_out': None, 'functiontransformer-2__func': <function copy at 0x7a637d579990>, 'functiontransformer-2__inv_kw_args': None, 'functiontransformer-2__inverse_func': None, 'functiontransformer-2__kw_args': None, 'functiontransformer-2__validate': False}"
